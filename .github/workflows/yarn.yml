# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Yarn CI & CD

on:
  # runs on all pull requests against main
  pull_request:
    branches: [main]
  workflow_call:
    inputs:
      release:
        required: false
        type: boolean

jobs:
  build:
    runs-on: ubuntu-24.04
    strategy:
      matrix:
        node-version: [24.x]

    outputs:
      sha_short: ${{ steps.vars.outputs.sha_short }}

    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: "yarn"
      - name: Install dependencies
        run: yarn install --frozen-lockfile
      - name: Prettier check
        run: yarn prettier
      - name: eslint check
        run: yarn lint
      - name: TS check
        run: yarn ts
      - name: Build output for prod
        run: yarn build
      - name: tar files together before artifact creation
        run: tar -cvf build.tar build/
      - name: Upload build artifact for release
        uses: actions/upload-artifact@v4
        with:
          name: build
          path: build.tar
          overwrite: true
      - name: Set variables for tag generation
        id: vars
        run: echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"

  # CD-specific job
  release:
    if: ${{ inputs.release }}
    needs: build

    runs-on: ubuntu-24.04
    strategy:
      matrix:
        node-version: [24.x]

    steps:
      - name: Download artifact from build
        uses: actions/download-artifact@v4
        with:
          name: build
      - name: Generate release
        uses: ncipollo/release-action@v1
        with:
          allowUpdates: false
          artifactErrorsFailBuild: true
          artifacts: "build.tar"
          # don't use {{ github.sha }} here since that's the full SHA
          tag: 1.0.0-${{ needs.build.outputs.sha_short }}
          token: ${{ secrets.GITHUB_TOKEN }}
